(self.webpackChunkxpert_ai=self.webpackChunkxpert_ai||[]).push([[4073],{"./packages/angular/common/select/mat/select.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".ngm-select-form-field__viewport {\n  min-height: 200px;\n}\n\n::ng-deep .ngm-select__autocomplete-panel.mat-mdc-autocomplete-panel.multiple .mat-mdc-option {\n  padding: 0;\n}\n::ng-deep .ngm-select__autocomplete-panel.mat-mdc-autocomplete-panel.multiple .mdc-list-item__primary-text {\n  overflow: visible;\n}\n::ng-deep .ngm-select__autocomplete-panel.mat-mdc-autocomplete-panel .mdc-list-item__primary-text {\n  width: 100%;\n}\n::ng-deep .ngm-select__autocomplete-panel.mat-mdc-autocomplete-panel .mdc-list-item__primary-text .mat-mdc-checkbox {\n  width: 100%;\n}\n::ng-deep .ngm-select__autocomplete-panel.mat-mdc-autocomplete-panel .mdc-list-item__primary-text .mat-mdc-checkbox .mdc-form-field {\n  width: 100%;\n}\n::ng-deep .ngm-select__autocomplete-panel.mat-mdc-autocomplete-panel .mdc-list-item__primary-text .mat-mdc-checkbox .mdc-label {\n  flex: 1;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/common/select/mat/select.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>NgmMatSelectComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var select_componentngResource=__webpack_require__("./packages/angular/common/select/mat/select.component.scss?ngResource"),select_componentngResource_default=__webpack_require__.n(select_componentngResource),coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),scrolling=__webpack_require__("./node_modules/@angular/cdk/fesm2022/scrolling.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2022/autocomplete.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),fesm2022_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2022/checkbox.mjs"),form_field=__webpack_require__("./node_modules/@angular/material/fesm2022/form-field.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2022/progress-spinner.mjs"),directives_displayDensity=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),core_module=__webpack_require__("./packages/angular/core/core.module.ts"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),combineLatestWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),display_behaviour_component=__webpack_require__("./packages/angular/common/display-behaviour/display-behaviour.component.ts"),isEqual=__webpack_require__("./node_modules/lodash-es/isEqual.js");let NgmMatSelectComponent=class NgmMatSelectComponent{#destroyRef;get multiple(){return this._multiple}set multiple(value){this._multiple=(0,coercion.he)(value)}get virtualScroll(){return this._virtualScroll}set virtualScroll(value){this._virtualScroll=(0,coercion.he)(value)}get highlight(){return"string"==typeof this.formControl.value?this.formControl.value.trim():null}get isNotInitial(){return Array.isArray(this.formControl.value)?this.formControl.value.length:this.formControl.value}constructor(){this.#destroyRef=(0,core.inject)(core.DestroyRef),this._isSelectComponent=!0,this.selectOptions=(0,core.input)([]),this._multiple=!1,this._virtualScroll=!1,this.loading=(0,core.input)(!1),this.virtualScrollItemSize=48,this.formControl=new fesm2022_forms.MJ(null),this.selectionSignal=function selectionModel(){const m=(0,core.signal)([]),sig=()=>m();return sig.set=value=>{m.set(value)},sig.update=fn=>{m.update(fn)},sig.select=value=>{m.update((values=>[...values,value]))},sig.deselect=value=>{m.update((values=>values.filter((v=>v!==value))))},sig.clear=()=>{m.set([])},sig}(),this.selectedValues=(0,core.computed)((()=>this.selectionSignal()),{equal:isEqual.A}),this._selectOptions$=(0,rxjs_interop.br)(this.selectOptions),this.options$=this.formControl.valueChanges.pipe((0,startWith.Z)(""),(0,debounceTime.B)(500),(0,combineLatestWith.v)(this._selectOptions$),(0,map.T)((([name,options])=>{const text=Array.isArray(name)?null:"string"==typeof name?name?.trim().toLowerCase():null;return options?.filter((option=>!text||(option.caption?.toLowerCase().includes(text)||`${option.key}`.toLowerCase().includes(text))))}))),(0,core.effect)((()=>{this.multiple&&this.onChange?.(this.selectedValues())}),{allowSignalWrites:!0})}ngOnInit(){this.formControl.valueChanges.pipe((0,filter.p)((()=>!this.multiple)),(0,distinctUntilChanged.F)(),(0,rxjs_interop.pQ)(this.#destroyRef)).subscribe((value=>{"string"==typeof value||Array.isArray(value)||this.onChange?.(value?.key)})),this._selectOptions$.pipe((0,rxjs_interop.pQ)(this.#destroyRef)).subscribe((()=>{this._updateLabel()}))}ngOnChanges({displayDensity,validators}){displayDensity&&(this.displayDensity===directives_displayDensity.X4.compact?this.virtualScrollItemSize=30:this.displayDensity===directives_displayDensity.X4.cosy?this.virtualScrollItemSize=36:this.virtualScrollItemSize=48),validators&&this.formControl.setValidators(validators.currentValue)}writeValue(obj){obj&&(this.multiple?this.selectionSignal.set(obj):this.formControl.setValue({key:obj},{emitEvent:!1}),this._updateLabel())}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){isDisabled?this.formControl.disable():this.formControl.enable()}trackBy(i,item){return item.key||item.value}displayWith(value){return Array.isArray(value)?value:value?.caption||value?.key}_updateLabel(){if(this.multiple)this.formControl.setValue(this.selectionSignal().map((value=>this.selectOptions()?.find((item=>item.key===value))?.caption||value)));else{let option=this.formControl.value;const key=option?.key;key&&!option.caption&&(option={key,caption:this.selectOptions()?.find((item=>item.key===key))?.caption},this.formControl.setValue(option,{emitEvent:!1}))}}isSelect(option){return this.selectionSignal().includes(option.key)}onSelect(event,option){this.multiple&&(event.checked?this.selectionSignal.select(option.key):this.selectionSignal.deselect(option.key))}clear(){this.formControl.setValue(null),this.selectionSignal.clear()}getErrorMessage(){return Object.values(this.formControl.errors).join(", ")}static#_=this.ctorParameters=()=>[];static#_2=this.propDecorators={_isSelectComponent:[{type:core.HostBinding,args:["class.ngm-mat-select"]}],appearance:[{type:core.Input}],displayBehaviour:[{type:core.Input}],displayDensity:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],validators:[{type:core.Input}],selectOptions:[{type:core.Input,args:[{isSignal:!0,alias:"selectOptions",required:!1,transform:void 0}]}],multiple:[{type:core.Input}],virtualScroll:[{type:core.Input}],loading:[{type:core.Input,args:[{isSignal:!0,alias:"loading",required:!1,transform:void 0}]}]}};NgmMatSelectComponent=(0,tslib_es6.Cg)([(0,core.Component)({standalone:!0,changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-mat-select",template:'<mat-form-field class="w-full flex-1 group" [appearance]="appearance" [displayDensity]="displayDensity">\n    <mat-label>{{label}}</mat-label>\n    <input type="text"\n            [placeholder]="placeholder"\n            matInput\n            [formControl]="formControl"\n            [matAutocomplete]="auto"\n            >\n    \n    <mat-autocomplete autoActiveFirstOption #auto="matAutocomplete" class="ngm-select__autocomplete-panel"\n        [class]="(multiple ? \'multiple\' : \'\') + \' \' + (displayDensity===\'compact\' ? \'ngm-density__compact\' : \'\') + \' \' + (displayDensity===\'cosy\' ? \'ngm-density__cosy\' : \'\')"\n        [displayWith]="displayWith"\n    >\n        <cdk-virtual-scroll-viewport *ngIf="virtualScroll; else nonVirtualScroll" [itemSize]="virtualScrollItemSize"\n            minBufferPx="200" maxBufferPx="400" class="ngm-select-form-field__viewport">\n            <mat-option *cdkVirtualFor="let option of options$ | async;" [value]="option" class="flex items-center">\n                <mat-checkbox *ngIf="multiple" [checked]="isSelect(option)" (click)="$event.stopPropagation()" (change)="onSelect($event, option)">\n                    <ngm-display-behaviour [option]="option" [displayBehaviour]="displayBehaviour" [highlight]="highlight"></ngm-display-behaviour>\n                </mat-checkbox>\n                <ngm-display-behaviour *ngIf="!multiple" class="flex-1" [option]="option" [displayBehaviour]="displayBehaviour" [highlight]="highlight"></ngm-display-behaviour>\n            </mat-option>\n        </cdk-virtual-scroll-viewport>\n\n        <ng-template #nonVirtualScroll>\n            <mat-option *ngFor="let option of options$ | async" [value]="option" class="flex items-center">\n                <mat-checkbox *ngIf="multiple" [checked]="isSelect(option)" (click)="$event.stopPropagation()" (change)="onSelect($event, option)">\n                    <ngm-display-behaviour [option]="option" [displayBehaviour]="displayBehaviour" [highlight]="highlight"></ngm-display-behaviour>\n                </mat-checkbox>\n                <ngm-display-behaviour *ngIf="!multiple" class="flex-1" [option]="option" [displayBehaviour]="displayBehaviour" [highlight]="highlight"></ngm-display-behaviour>\n            </mat-option>\n        </ng-template>\n    </mat-autocomplete>\n\n    <div matSuffix class="flex items-center">\n        <button *ngIf="isNotInitial" mat-icon-button class="opacity-0 group-hover:opacity-100" [disabled]="formControl.disabled"\n            ngmAppearance="danger"\n            (click)="clear()">\n            <mat-icon>close</mat-icon>\n        </button>\n        <mat-spinner *ngIf="loading()" class="m-2" color="accent" strokeWidth="2" diameter="24"></mat-spinner>\n    </div>\n\n    <mat-error *ngIf="formControl.invalid">{{getErrorMessage()}}</mat-error>\n</mat-form-field>\n',inputs:["disabled","disableRipple","color"],host:{"[attr.disabled]":"disabled || null"},providers:[{provide:fesm2022_forms.kq,multi:!0,useExisting:(0,core.forwardRef)((()=>NgmMatSelectComponent))}],imports:[common.CommonModule,fesm2022_forms.YN,fesm2022_forms.X1,scrolling.E9,form_field.RG,autocomplete.jL,fesm2022_checkbox.g7,progress_spinner.D6,icon.m_,input.fS,fesm2022_button.Hl,display_behaviour_component.r,core_module.T],styles:[select_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[])],NgmMatSelectComponent)},"./packages/angular/common/select/select.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{F:()=>NgmSelectModule});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_select_select_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/angular/common/select/select/select.component.ts"),_input_option_content__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/angular/common/input/option-content.ts"),_mat_select_component__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/angular/common/select/mat/select.component.ts");let NgmSelectModule=class NgmSelectModule{};NgmSelectModule=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({declarations:[],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule,_input_option_content__WEBPACK_IMPORTED_MODULE_3__.r,_select_select_component__WEBPACK_IMPORTED_MODULE_4__.O,_mat_select_component__WEBPACK_IMPORTED_MODULE_5__.k],exports:[_input_option_content__WEBPACK_IMPORTED_MODULE_3__.r,_select_select_component__WEBPACK_IMPORTED_MODULE_4__.O,_mat_select_component__WEBPACK_IMPORTED_MODULE_5__.k]})],NgmSelectModule)},"./packages/angular/i18n/zhHans.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{f:()=>ZhHans});const ZhHans={Ngm:{Common:{Add:"添加",Cancel:"取消",Apply:"应用",Reset:"重置",Search:"搜索",Select:"选择",Clear:"清空",Search_Placeholder:"请输入关键词",DisplayBehaviour_Description:"描述",DisplayBehaviour_DescriptionID:"描述 ID",DisplayBehaviour_IDDescription:"ID 描述",DisplayBehaviour_ID:"ID",DisplayBehaviour_Auto:"自动",SelectionType_Single:"单选",SelectionType_Multiple:"多选",Presentation_Flat:"平铺",Presentation_Hierarchy:"层级",HierarchySelectionMode_Individual:"单个",HierarchySelectionMode_SelfDescendants:"自己和后代",HierarchySelectionMode_DescendantsOnly:"只后代",HierarchySelectionMode_SelfChildren:"自己和子代",HierarchySelectionMode_ChildrenOnly:"只子代",Measures:"度量",None:"无",Default:"默认",Hierarchy:"层次结构",DisplayBehaviour:"显示行为",DisplayBehaviour_IDOnly:"编码"},AnalyticalCard:{Screenshot:"截图",DataDownload:"下载数据",Refresh:"刷新",DrillDown:"下钻",DrillLevel:"层级下钻",DrillDimension:"维度下钻",LinkAnalysis:"联动筛选",DataEmpty:"数据为空"},AnalyticalGrid:{DataDownload:"下载数据",SORT:"排序",MOVE:"移动",ASCENDING:"正序",DESCENDGING:"倒序",MOVELEFT:"向左",MOVERIGHT:"向右",Search:"搜索",SelectAll:"选择所有",Pin:"固定"},Controls:{ValueHelp:{Title:"为{{value}}设置过滤器",AvailableMembers:"可选成员",DisplayBehaviour:"展现形式",SelectedMembers:"选中成员",ClearSelection:"清空选择",ShowUnbookedMembers:"显示未分配成员",ShowAllMember:"显示‘所有’成员",ShowOnlyLeaves:"只显示叶子节点",ExcludeSelectedMembers:"排除选中成员",SelectionType:"选择类型",Presentation:"展现形式",HierarchySelectionMode:"层级选择模式",Hierarchy:"层次结构"}},Entity:{SelectEntities:"选择数据集",SemanticModel:"语义模型",Cube:"多维数据集",AnnotatedCube:"增强过的多维数据集",MEASURE:"度量",SELECT_DIMENSION:"选择维度",MeasureFormatting:"度量格式",ShortNumber:"缩写数字",Decimals:"小数位",Unit:"单位",UseUnderlyingUnit:"使用模型单位",DigitsInfo:"数字格式"},EntitySchema:{Parameters:"参数",Measures:"度量",Properties:"属性"},Formula:{Editor:{EditFormula:"编辑公式",Format:"格式化",Help:"帮助"}},Table:{Select:"选择",NoData:"无数据",MatchingFilter:'匹配过滤条件"{{value}}"',firstPageLabel:"第一",itemsPerPageLabel:"每页",lastPageLabel:"最后",nextPageLabel:"下一页",previousPageLabel:"上一页",rangeLabel0:"页 1 共 1",pageLabel:"页",ofLabel:"共"},DatePicker:{Date:"日期",Year:"年",Quarter:"季",Month:"月",Week:"周",Day:"日",From:"从",To:"至"},TimeFilter:{SET_DATE_RANGE:"为 {{property}} 设置时间区间",CURRENT_DATE:"当前日期",SYSTEM_DATE:"系统时间",USER_CURRENT_DATE:"用户当前时间",ADD_TIME_RANGE:"添加时间区间",RANGE:"区间",RANGE_TYPE:"区间类型",RANGE_TYPE_STANDARD:"标准",RANGE_TYPE_OFFSET:"偏移",GRANULARITY:"粒度",YEAR:"年",QUARTER:"季度",MONTH:"月",WEEK:"周",DAY:"日",LOOK_BACK:"回顾",LOOK_AHEAD:"展望",CURRENT_PERIOD:"当前时间",FORMATTER:"格式",OFFSET_DIRECTION:"偏移方向",OFFSET_AMOUNT:"偏移量",SETTINGS_FOR_USERS:"为用户设置",ALLOW_MODIFY_SELECTIONS:"允许查看者修改选择",SELECTION_TYPE:"选择类型",SELECTION_TYPE_MULTIPLE:"多选",SELECTION_TYPE_SINGLE:"单选",TODAY:"当前期间",Year:"年",Quarter:"季度",Month:"月",Week:"周",Day:"日",Today:"今天"},AdvancedSlicer:{TITLE:"高级切片器",CONTEXT:"上下文",OPERATOR:"操作符",ENABLE_OTHER:"汇总其它项",VALUE:"值",VALUE_FROM:"从",VALUE_TO:"至",MEASURE:"度量",MeasureSelectPlaceholder:"选择或新建一个度量",Equal:"等于",NotEqual:"不等于",LessThan:"小于",GreaterThan:"大于",LessEqual:"小于等于",GreaterEqual:"大于等于",Between:"介于",NotBetween:"不介于",TopCount:"前 N 个",BottomCount:"后 N 个",TopPercent:"前百分比的",BottomPercent:"后百分比的",TopSum:"前总数",BottomSum:"后总数"},Property:{PARAMETER:"参数",PARAMETERS:"参数",MEASURE:"度量",MEASURES:"度量",MeasureGroup:"度量组",INDICATORS:"指标",CREATE_PARAMETER:"创建参数",EditParameter:"编辑参数",CALCULATIONS:"计算度量",DIMENSION:"维度",DIMENSIONS:"维度",ADD_DIMENSION:"添加维度",MEMBERS:"成员",HIERARCHY:"层次结构",ADD_PARAMETER_MEMBER:"添加成员",MEASURE_CONTROLS:"度量控制",CREATE_CALCULATION:"创建计算",CREATE_MEASURE_CONTROL:"创建度量控制",REFERENCE_LINE:"参考线",Input:"输入",Select:"选择",Dimensions:"维度",Name:"名称",NameRequired:"名称必输或已存在",Caption:"标签",Value:"值",DefaultValue:"默认值",ValueType:"值类型",DisplayAs:"显示为",Label:"文本字段",Formatter:"格式设置",EditFormula:"编辑公式",UnbookedData:"无成员数据",ZeroSuppression:"清零",PropertyList:"属性列表",DisplayHierarchy:"包含父级层级",CreateParameter:"创建参数",CurrentMember:"当前成员",PreviousNMember:"之前第 N 个成员",NextNMember:"之后第 N 个成员",ParallelMember:"平行成员",AncestorMember:"祖先成员",SelectByMembers:"选择成员",NewCalculationInputControl:"新建计算输入",NthMember:"值 / 第 N 个",IsDefault:"默认",Default:"默认",Auto:"自动","Description and ID":"名称+ID","Description Only":"名称","ID Only":"ID",Description:"描述",Order:"排序",None:"无",Order_ASC:"正序",Order_DESC:"倒序",Dimension:"维度",AvailableMembers:"可用成员",DimensionNotFound:"在数据集‘{{cube}}’中未找到维度‘{{dimension}}’",DIMENSION_MEASURE:"维度/度量",Parameter:"参数","Measure Control":"度量控制",Measure:"度量",Calculation:"计算",Hierarchy:"层次结构",Level:"层级","Measure Group":"度量组",Indicator:"指标",Calendar:"日历","Address.Country":"国家",Variable:"参数变量"},MeasureSelect:{EditCalculationMeasure:"编辑计算度量",NewCalculationMeasure:"新建计算度量"},Calculation:{TITLE:"计算编辑器",TYPE:"类型",Name:"名称",NameRequired:"名称必输或已存在",Caption:"标签",FUNCTIONS:"函数",DIMENSION_MEMBERS:"维度成员",CALCULATED_MEMBERS:"计算成员",PARAMETERS:"参数",CALCULATED_MEASURE:"计算公式",RESTRICTED_MEASURE:"受限度量",VARIANCE_MEASURE:"差值度量",AGGREGATION:"聚合",DIMENSION_TO_MEASURE:"维度转度量",MEASURE_CONTROL:"度量控制",PROPERTIES:"属性",OPERATION:"运算",VALUE:"值",AGGREGATION_DIMENSIONS:"聚合维度",ADD_DIMENSION:"添加维度",SELECTION_CONTEXT:"选择上下文",ENABLE_CONSTANT_SELECTION:"启用常量选择",EDIT_FORMULA:"编辑公式",ToggleSidebar:"切换侧边栏",UseConditionalAggregation:"使用条件聚合",ConditionalDimensions:"条件维度",ExcludeConditions:"排除条件",Compare:"比",To:"较",BaseDimension:"基准维度",SetNoDataasZero:"将无数据当作零",CalculateasPercentage:"计算为百分比",DirectDivide:"直接除",AbsoluteBaseValue:"绝对化基值",DivideBy:"除以",CompareValueA:"比 (A)",ToValueB:"较 (B)",Measure:"度量",RestrictiveConditions:"限定条件",ConstantSelectionTootip:"锁定限定条件维度成员,使其不会被用户上下文切片器所覆盖",Dimension:"维度",MeasureSelectOptions:"度量选择选项",ConditionalAggregation:"条件聚合",Unit:"单位",Formulas:"公式",MeasureSelectPlaceholder:"选择或新建一个度量",MeasureIsRequired:"度量必选"},AdvancedFilter:{Title:"组合切片器",AND:"且",OR:"或",GROUP:"组合",Operator:"操作符",Value:"值",Condition:"条件",AddGroup:'"且"组合',OrGroup:'"或"组合',EndGroup:"结束组合",DeleteGroup:"删除组合",Tips:"使用 且/或 创建条件组合"},Selection:{Slicers:"切片器",AdvancedFilter:"组合切片器",CombinationSlicer:"组合切片器",AdvancedSlicer:"高级切片器",DimensionMembers:"维度成员",TimeRanges:"动态时间范围",OnContext:"基于",SLICERS_BAR:{TITLE:"过滤器"},SLICER:{ADVANCED_SLICER:"高级切片器",ADVANCED_FILTER:"组合切片器"},DateFunctions:{SYSTEMTIME:"系统时间",TODAY:"今天"}},Messages:{NotFoundValue:"未找到值："}}}},"./packages/angular/mock/translate.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{En:()=>provideTranslate});var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ngx-translate/core/dist/fesm2022/ngx-translate-core.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/angular/core/i18n/missing-tanslation.ts"),_metad_ocap_angular_i18n__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/angular/i18n/zhHans.ts");const zhHansLanguage="zh-Hans";class CustomTranslateLoader{getTranslation(lang){return console.log(lang),lang===zhHansLanguage?(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(_metad_ocap_angular_i18n__WEBPACK_IMPORTED_MODULE_1__.f):(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(null)}}function provideTranslate(defaultLanguage=zhHansLanguage){return(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.importProvidersFrom)(_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.h.forRoot({missingTranslationHandler:{provide:_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.er,useClass:_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_4__.y},loader:{provide:_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.Wr,useClass:CustomTranslateLoader,deps:[_angular_common_http__WEBPACK_IMPORTED_MODULE_5__.Qq]},defaultLanguage}))}},"./packages/angular/common/select/select/select.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Density:()=>Density,Multiple:()=>Multiple,MultipleSearchable:()=>MultipleSearchable,Suffix:()=>Suffix,SuffixSearchable:()=>SuffixSearchable,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_material_button__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),_angular_material_icon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/angular/core/core.module.ts"),_metad_ocap_angular_mock__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/angular/mock/translate.ts"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_select_module__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/angular/common/select/select.module.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Common/Select",component:__webpack_require__("./packages/angular/common/select/select/select.component.ts").O,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__.provideAnimations)(),(0,_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.$R)(),(0,_metad_ocap_angular_mock__WEBPACK_IMPORTED_MODULE_4__.En)()]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[],imports:[_angular_material_button__WEBPACK_IMPORTED_MODULE_5__.Hl,_angular_material_icon__WEBPACK_IMPORTED_MODULE_6__.m_,_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_7__.T,_select_module__WEBPACK_IMPORTED_MODULE_8__.F]})]},TREE_NODE_DATA=[{key:null,caption:"",value:{name:null}},{key:"Fruit",caption:"水果"},{key:"Apple",caption:"苹果",value:{type:"Hive"}},{key:"Banana",caption:"香蕉"},{key:"Fruit loops",caption:"果循环"},{key:"Vegetables",caption:"蔬菜"},{key:"Green",caption:"绿色"},{key:"Broccoli",caption:"西兰花"},{key:"Brussel sprouts",caption:"豆芽"},{key:"Orange",caption:"橙"},{key:"Pumpkins",caption:"南瓜",raw:{type:"PG"}},{key:"Carrots",caption:"胡萝卜"}],Default={args:{selectOptions:TREE_NODE_DATA,valueKey:"key"}},Suffix={render:args=>({props:args,template:'\n<ngm-select [selectOptions]="selectOptions">\n<div ngmSuffix>suffix</div>\n</ngm-select>    \n    '}),args:{selectOptions:TREE_NODE_DATA,valueKey:"key"}},SuffixSearchable={render:args=>({props:args,template:`\n<ngm-select searchable [selectOptions]="selectOptions" ${(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.argsToTemplate)(args)}>\n  <div ngmSuffix>\n    <mat-icon>search</mat-icon>\n  </div>\n</ngm-select>    \n    `}),args:{selectOptions:TREE_NODE_DATA,valueKey:"key"}},WithIcon={args:{valueKey:"key",selectOptions:[{key:"Fruit",caption:"水果",icon:"apple"}]}},Multiple={args:{valueKey:"key",selectOptions:TREE_NODE_DATA,multiple:!0}},MultipleSearchable={args:{valueKey:"key",selectOptions:TREE_NODE_DATA,multiple:!0,searchable:!0}},Density={render:args=>({props:args,template:'\n<div class="flex items-center gap-4 p-4">\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n   [valueKey]="valueKey"\n  >\n  </ngm-select>\n\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n</div>\n<div displayDensity="cosy" class="flex items-center gap-4 p-4">\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n</div>\n\n<div displayDensity="compact" class="flex items-center gap-4 p-4">\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions" displayDensity="compact"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n</div>\n    '}),args:{selectOptions:TREE_NODE_DATA,valueKey:"key"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    selectOptions: TREE_NODE_DATA,\n    valueKey: 'key'\n  }\n}",...Default.parameters?.docs?.source}}},Suffix.parameters={...Suffix.parameters,docs:{...Suffix.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    props: args,\n    template: `\n<ngm-select [selectOptions]=\"selectOptions\">\n<div ngmSuffix>suffix</div>\n</ngm-select>    \n    `\n  }),\n  args: {\n    selectOptions: TREE_NODE_DATA,\n    valueKey: 'key'\n  }\n}",...Suffix.parameters?.docs?.source}}},SuffixSearchable.parameters={...SuffixSearchable.parameters,docs:{...SuffixSearchable.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    props: args,\n    template: `\n<ngm-select searchable [selectOptions]=\"selectOptions\" ${argsToTemplate(args)}>\n  <div ngmSuffix>\n    <mat-icon>search</mat-icon>\n  </div>\n</ngm-select>    \n    `\n  }),\n  args: {\n    selectOptions: TREE_NODE_DATA,\n    valueKey: 'key'\n  }\n}",...SuffixSearchable.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    valueKey: 'key',\n    selectOptions: [{\n      key: 'Fruit',\n      caption: '水果',\n      icon: 'apple'\n    }]\n  }\n}",...WithIcon.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:"{\n  args: {\n    valueKey: 'key',\n    selectOptions: TREE_NODE_DATA,\n    multiple: true\n  }\n}",...Multiple.parameters?.docs?.source}}},MultipleSearchable.parameters={...MultipleSearchable.parameters,docs:{...MultipleSearchable.parameters?.docs,source:{originalSource:"{\n  args: {\n    valueKey: 'key',\n    selectOptions: TREE_NODE_DATA,\n    multiple: true,\n    searchable: true\n  }\n}",...MultipleSearchable.parameters?.docs?.source}}},Density.parameters={...Density.parameters,docs:{...Density.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n<div class="flex items-center gap-4 p-4">\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n   [valueKey]="valueKey"\n  >\n  </ngm-select>\n\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n</div>\n<div displayDensity="cosy" class="flex items-center gap-4 p-4">\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n</div>\n\n<div displayDensity="compact" class="flex items-center gap-4 p-4">\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n  </ngm-select>\n\n  <ngm-select label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions" displayDensity="compact"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n  <ngm-select searchable label="Fruit" placeholder="Select an option" [selectOptions]="selectOptions"\n    [valueKey]="valueKey">\n    <button ngmSuffix mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </ngm-select>\n</div>\n    `\n  }),\n  args: {\n    selectOptions: TREE_NODE_DATA,\n    valueKey: \'key\'\n  }\n}',...Density.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Suffix","SuffixSearchable","WithIcon","Multiple","MultipleSearchable","Density"]}}]);